<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reference on Wails</title>
    <link>https://wails.app/reference/</link>
    <description>Recent content in Reference on Wails</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Aug 2019 04:56:50 +1000</lastBuildDate>
    
	<atom:link href="https://wails.app/reference/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>API</title>
      <link>https://wails.app/reference/api/</link>
      <pubDate>Thu, 29 Aug 2019 04:56:50 +1000</pubDate>
      
      <guid>https://wails.app/reference/api/</guid>
      <description>Binding Having just a web frontend means nothing unless you can interact with the system. Wails enables this through &amp;lsquo;binding&amp;rsquo; - making Go code callable from the frontend. There are 2 types of code you can bind to the frontend: Functions and Struct Methods. When they are bound, they may be used in the frontend.
Functions Binding a function is as easy as this:
package main import ( &amp;#34;github.com/wailsapp/wails&amp;#34; &amp;#34;fmt&amp;#34; ) func Greet(name string) string { return fmt.</description>
    </item>
    
    <item>
      <title>Runtime</title>
      <link>https://wails.app/reference/runtime/</link>
      <pubDate>Thu, 29 Aug 2019 04:56:50 +1000</pubDate>
      
      <guid>https://wails.app/reference/runtime/</guid>
      <description>Wails comes with a runtime library that may be accessed from Javascript or Go. It has the following subsystems:
 Events Logging Window Dialog Browser  NOTE: At this time, the Javascript runtime does not include the Window and Dialog subsystems
When binding a struct with the WailsInit method, the Go runtime object is presented by the Application.
For the frontend, the runtime is accessed through the window.wails object.</description>
    </item>
    
    <item>
      <title>CLI</title>
      <link>https://wails.app/reference/cli/</link>
      <pubDate>Thu, 29 Aug 2019 04:56:50 +1000</pubDate>
      
      <guid>https://wails.app/reference/cli/</guid>
      <description>Wails comes with a CLI tool that allows you to generate, build and bundle your projects. It deals with the complexity of juggling Go and Javascript environments.
It has a number of commands:
Help  wails &amp;ndash;help
 This will output the cli help message with all the available commands and flags.
Setup  wails setup
 The setup command does a number of things - it asks you for your name and email so that it can fill in project templates with your details.</description>
    </item>
    
  </channel>
</rss>